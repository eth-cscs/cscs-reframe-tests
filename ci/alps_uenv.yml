include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - pull
  - run
  # - status

# {{{ pull
setup and pull:
  stage: pull
  extends: .f7t-baremetal-runner
  variables:
    # Valid MODE=('container-runner', 'baremetal', 'f7t-controller')
    # MODE: "${RFM_MODE}"
    # GIT_STRATEGY: "fetch"
    # SLURM_ACCOUNT: "${SLURM_ACCOUNT}"
    # FIRECREST_SYSTEM: "${FIRECREST_SYSTEM}"
  before_script:
    - echo "FIRECREST_SYSTEM=$FIRECREST_SYSTEM / F7T_URL=$F7T_URL / CLUSTER_NAME=$CLUSTER_NAME"
    - pwd
    - uname -a
    - ./ci/scripts/alps.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    - source ./uenv-5.1.0/bin/activate-uenv
    - uenv --version
    - export PATH=$PWD:$UENV_PREFIX/libexec:$PATH
    - uenv-oras version
    - imgs=$(./ci/scripts/alps.sh uenv_image_find)
  script: |
    echo "imgs=$imgs"
    unset UENVA
    uenv repo create
    uenv repo status
    for img in $imgs; do
      # ./ci/scripts/alps.sh oras_pull_meta_dir "$img"
      ./ci/scripts/alps.sh uenv_pull_meta_dir "$img" &> .rc
      ./ci/scripts/alps.sh meta_has_reframe_yaml "$img" &> .rc
      cat .rc
      rc=$(grep -q OK .rc ; echo $?)
      echo "rc=$rc"
      if [ $rc -eq 0 ] ; then
        UENVA+="$img,"
        echo "UENVA=$UENVA"
      fi
    done
    UENVA=${UENVA%?}
    UENV=`echo ${UENVA} | sed 's-,,-,-g' | sort -u`
    echo "UENV=$UENV" > rfm_uenv.env
    cat rfm_uenv.env | tr , "\n"
  artifacts:
    reports:
      dotenv: rfm_uenv.env
# }}}

# {{{ reframe
reframe:
  stage: run
  extends: .f7t-baremetal-runner
  needs: ['setup and pull']
  variables:
    MODE: "${RFM_MODE}"
    GIT_STRATEGY: "fetch"
    SLURM_ACCOUNT: "${SLURM_ACCOUNT}"
    FIRECREST_SYSTEM: "${FIRECREST_SYSTEM}"
  before_script:
    - echo "FIRECREST_SYSTEM=$FIRECREST_SYSTEM / F7T_URL=$F7T_URL / CLUSTER_NAME=$CLUSTER_NAME"
    - uname -a
    - pwd
    - ./ci/scripts/alps.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    - source ./uenv-5.1.0/bin/activate-uenv
    - uenv --version
    - echo "UENV=$UENV" | tr , "\n"
  script:
    - hostname
    - rfm_path=$(./ci/scripts/alps.sh install_reframe)
    - echo "rfm_path=$rfm_path"
    - export PATH=$rfm_path:$PATH
    - reframe -V
    - ./ci/scripts/alps.sh launch_reframe_1arg "--mode uenv_production"
  artifacts:
    when: always
    paths:
      - report.xml
      - latest.json
    reports:
      junit: report.xml
# }}}

# {{{ status_page
status_page:
  stage: status
  needs: ['reframe']
  extends: .container-runner-lightweight-zen2
  image: python:3.9
  script:
    - pwd
    - ls -a
    - pip install requests
    - ./ci/scripts/alps.sh oneuptime "$FIRECREST_SYSTEM" "uenv"
  when: always
# }}}
