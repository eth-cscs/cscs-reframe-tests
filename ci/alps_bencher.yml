include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - pull
  - run
  # - notify
  # - status

setup and pull:
  stage: pull
  extends: .f7t-baremetal-runner
  timeout: 8 hours
  variables:
    SLURM_TIMELIMIT: '00:10:00'
    # Valid MODE=('container-runner', 'baremetal', 'f7t-controller')
  before_script:
    - echo "FIRECREST_SYSTEM=$FIRECREST_SYSTEM / F7T_URL=$F7T_URL / CLUSTER_NAME=$CLUSTER_NAME"
    - pwd
    - uname -a
    # - ./ci/scripts/alps.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    # - source ./uenv-5.1.0/bin/activate-uenv
    - uenv --version
    # - export PATH=$PWD:$UENV_PREFIX/libexec:$PATH
    # - uenv-oras version
    - imgs=$(./ci/scripts/alps.sh uenv_image_find)
  script: |
    echo "imgs=$imgs"
    unset UENVA
    # uenv repo create
    uenv repo status
    for img in $imgs; do
      ./ci/scripts/alps.sh uenv_pull_meta_dir "$img" &> .rc
      ./ci/scripts/alps.sh meta_has_reframe_yaml "$img" &> .rc
      cat .rc
      rc=$(grep -q OK .rc ; echo $?)
      echo "rc=$rc"
      if [ $rc -eq 0 ] ; then
        UENVA+="$img,"
        echo "UENVA=$UENVA"
      fi
    done
    UENVA=${UENVA%?}
    UENV=`echo ${UENVA} | sed 's-,,-,-g' | sort -u`
    echo "UENV=$UENV" > rfm_uenv.env
    cat rfm_uenv.env | tr , "\n"
  artifacts:
    reports:
      dotenv: rfm_uenv.env

.bencher_notification_setup_env:
  setup:
    - export PR_ID=$(echo "${CI_COMMIT_BRANCH}" | grep -o 'pr[0-9]*' | grep -o '[0-9]*')
    - |
      export FEATURE_BRANCH=$(curl -s "https://api.github.com/repos/eth-cscs/cscs-reframe-tests/pulls/$PR_ID" | grep '"ref":' | head -n1 | cut -d '"' -f4)
    - export GITHUB_ACTIONS=true
    - export GITHUB_EVENT_NAME=pull_request
    - export GITHUB_STEP_SUMMARY=$CI_PROJECT_DIR/step_summary.log
    - export GITHUB_SHA=$CI_COMMIT_SHA
    - export GITHUB_EVENT_PATH=$CI_PROJECT_DIR/event.json
    - |
      echo "{\"pull_request\": {\"head\": {\"repo\": {\"full_name\": \"eth-cscs/cscs-reframe\"}}}, \"repository\": {\"full_name\": \"eth-cscs/cscs-reframe\"}, \"number\": $PR_ID}" > $CI_PROJECT_DIR/event.json

reframe:
  stage: run
  extends: .f7t-baremetal-runner
  timeout: 8 hours
  variables:
    SLURM_TIMELIMIT: '00:20:00'
  needs: ['setup and pull']
  before_script:
    - echo "FIRECREST_SYSTEM=$FIRECREST_SYSTEM / F7T_URL=$F7T_URL / CLUSTER_NAME=$CLUSTER_NAME"
    - uname -a
    - pwd
    # - ./ci/scripts/alps.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    # - source ./uenv-5.1.0/bin/activate-uenv
    - uenv --version
    - echo "UENV=$UENV" | tr , "\n"
    # Send data to elastic on main branch only
    - '[ "$CI_COMMIT_REF_NAME" != "main" ] && unset RFM_HTTPJSON_URL'
  script:
    - !reference [.bencher_notification_setup_env, setup]
    - hostname
    - rfm_path=$(./ci/scripts/alps.sh install_reframe)
    - echo "rfm_path=$rfm_path"
    - export PATH=$rfm_path:$PATH
    - reframe -V
    - ./ci/scripts/alps.sh launch_reframe_bencher "--mode uenv_production"
  artifacts:
    when: always
    paths:
      - report.xml
      - latest.json
    reports:
      junit: report.xml

# status_page:
#   stage: status
#   needs: ['reframe']
#   extends: .container-runner-lightweight-zen2
#   image: python:3.9
#   script:
#     - pwd
#     - ls -a
#     - pip install requests
#     - ./ci/scripts/alps.sh oneuptime "$FIRECREST_SYSTEM" "uenv"
#   when: always

# notify_slack:
#   stage: notify
#   needs: ['reframe']
#   extends: .container-runner-lightweight-zen2
#   image: python:3.9
#   script:
#     - pwd
#     - ls -a
#     - pip install requests
#     - python ./ci/scripts/slack_notify.py latest.json uenv
#   rules:
#     - if: '$CI_COMMIT_REF_NAME == "main"'
#       when: always
#     - when: never

